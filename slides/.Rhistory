16/20
20/16
20/14
14*1.4
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
d <- read_csv('data/MedCPISmooth.csv')
version
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
l1 <- lm(heart_disease ~ smoking, data = d1)
library(jtools)
summ(l2)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
#library(kableExtra)
library(jtools)
library(haven)
library(knitr)
mydata = read_dta('binary.dta')
setwd("C:/Users/sonou/Dropbox/git/bryantstats.github.io/math461")
library(tidyverse)
#library(kableExtra)
library(jtools)
library(haven)
library(knitr)
mydata = read_dta('binary.dta')
setwd("C:/Users/sonou/Dropbox/git/bryantstats.github.io/math461/slides")
library(tidyverse)
#library(kableExtra)
library(jtools)
library(haven)
library(knitr)
mydata = read_dta('binary.dta')
library(tidyverse)
library(knitr)
d1 <- read_csv('heart_data.csv')
d = d1
kable(head(d1, 10) %>% select(-biking))
l2 <- lm(heart_disease ~ biking, data = d1)
d1 = d1 %>%
bind_cols(
pred2 = predict(l2, data = d1)
)
rss2 = sum((d1$heart_disease-d1$pred2)^2)
p1 = d1 %>%
ggplot(aes(x = biking)) +
geom_point(aes(y = heart_disease), color = "red")
p2 = d1 %>%
ggplot(aes(x = biking)) +
geom_point(aes(y = heart_disease), color = "red") +
geom_abline(intercept = coef(l2)[1], slope = coef(l2)[2],
color = "blue", linewidth = 1)
p3 = d1 %>%
ggplot(aes(x = biking))+
geom_point(aes(y = heart_disease), color = "red") +
geom_abline(intercept = coef(l2)[1], slope = coef(l2)[2],
color = "blue", linewidth = 1)+
geom_text(x = min(d1$biking)+.1, y = max(d1$heart_disease) - .1, label = paste0("R2 = ", round(summary(l2)$r.squared, 2)))
print(p3)
library(jtools)
summ(l2)
summary(l2)
?summ
summary(l2)
library(jtools)
summary(l2)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE)
d = read.csv('https://bryantstats.github.io/math461/slides/heart_data.csv')
my_linear_model <- lm(heart_disease ~ biking, data = d)
my_linear_model <- lm(heart_disease ~ biking, data = d)
summary(my_linear_model)
