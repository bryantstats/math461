---
title: "Principal Component Analysis"
format:
  revealjs:
    incremental: true   
---


# The Ideas



```{r}
projected_variance <- function(X, v)
  # calculate the variance of the projected data vectors X on vector v
  # X a n x p matrix
  # v is p x 1 vector
{
  v = v/(sqrt(sum(v^2)))
  X = as.matrix(X)
  X = scale(X, scale = FALSE)
  p = X%*%v
  sum((p)^2)/(nrow(X)-1)    
}
```


#


```{r}
pca_plot = function(X, v)
{
  v1=v
  v = v/(sqrt(sum(v^2)))
  X = data.frame(X)
  X = as.matrix(X)
  # Projection matrix
  P = v%*%t(v)/(t(v)%*%v)[1]
  
  
  p1 = P%*%X[1,]
  
  # Projected points
  PX = t(P%*%t(X))
  PX = as_tibble(PX)
  
  dd = as_tibble(cbind(X, PX))
  
  pp = ggplot(data = dd)+
    geom_point(aes(x=x, y=y), size = 5)+
    geom_segment(aes(x = 0, y = 0, xend = 9*v[1], yend = 9*v[2]))+
    geom_point(aes(x=V1, y=V2),  color ='red', size = 5)+
    geom_segment(aes(x = x, y = y, xend = V1, yend = V2), linetype=2)+
    geom_text(x = 0, y=10, label = paste("V:", round(projected_variance(X,v),2)))+
    labs(title = paste("Variance along the Direction: ", round(projected_variance(X,v),2)),
         subtitle = paste0("Direction z: [", round(v1[1],2),",", round(v1[2],2),"]"))+
    xlim(0,9)+
    ylim(0,9)+
    coord_fixed()
print(pp)

}
```


# 
### Dataset

```{r}

library(tidyverse)
library(ggplot2)
library(factoextra)
library(tidyverse) # data manipulation and visualization
library(gridExtra)
# Total variance is a constant
# Rotation does not change the total variance
vx= 0
vy = 1
v = c(vx,vy) 

set.seed(2023)

#x = sample(1:n, replace = TRUE, n)+rnorm(mean = 0, sd = .5, n)
#y = x + abs(rnorm(mean=0, sd = 5, n))

x = c(1:4)
y = c(1,2,5,7)

# x = c(1,1)
# y = c(3,3)
d <- as_tibble(data.frame(x = x, y=y))
library(knitr)
kable(d)
```


- V(x) = `r round(var(x),2)`

- V(y) = `r round(var(y),2)`

- Total variance: V(x) + V(y) = `r round(var(x) + var(y),2)`

# 
### Variance of along a direction

- Given a dataset $A$ containing multiple data points and a direction $d$. The variance of $A$ along the direction $d$ is calculated as follows. 

- Project all the data points of $A$ to the direction $d$

- Calculate the variance of the projected points

# 
### Variance of along a direction



```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(0,1))
```


-   Variance along y-axis is the same as the variance of $y$: 

- V(y) = `r round(var(y),2)`

# 
### Variance of along a direction



```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,0))
```


-   Variance along x-axis is the same as the variance of $x$: 

- V(x) = `r round(var(x),2)`


# 


```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,0))
```

```{r}
total_variance = projected_variance(d, v) + projected_variance(d, c(-vy, vx))
```


# 


```{r}
library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0))
```


# 


```{r}
library(tidyverse)
library(ggplot2)

pca_plot(d, c(1,0.1))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.2))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.3))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.4))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.5))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.6))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.7))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.8))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.9))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.1))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.2))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.3))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.4))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.5))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.6))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.7))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.8))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.9))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,2))
```


# 


```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,3))
```


# 


```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,4))
```


# 


```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,5))
```


# 


```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,6))
```


# 


```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,7))
```


# 


```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(0,1))
```


# 

-   What direction produces the maximum variance (where the points are most spread out)?


# 


```{r}
library(tidyverse)
library(ggplot2)

prin = prcomp(d)
pca_plot(d, prin$rotation[,1])

```


- Direction producing the maximum variance.

# 

- The direction produces the maximum variance is called The first principal component or PC1!

- The second principal component (PC2) is perpendicular to PC1 

- PC2 captures the remaining variance of the data that PC1 does not capture.

# 


```{r}
res.pca <- prcomp(d)
fviz_eig(res.pca, addlabels = TRUE)
```


- The variance distribution between the two Principal Components. Almost all of the variance stays in the first principal component. 


# 

![](32.png)


# 

![](33.png)

# Transform Data

- What is the application of PCA?

- We can use PCA to transform data from variable $x, y$ to variable (PC1, PC2)

#

:::: {.columns}

::: {.column width="40%"}

```{r}
kable(d)
```


:::

::: {.column width="60%"}

```{r}
d_var =  d %>% summarise_all(var) %>% round(2)

as_tibble(cbind(variable = names(d_var), t(d_var))) %>% 
  mutate(V2 = as.numeric(V2)) %>% 
  ggplot(aes(x = variable, y = V2))+
  geom_col()+
  geom_text(aes(label = V2), vjust = -0.5)+
  labs(y = "Variance")
```

:::

::::

- Original dataset and the distribution of variance between the two variables

#

:::: {.columns}

::: {.column width="40%"}

```{r}
pca_d = prcomp(d)
d2 = as_tibble(pca_d$x)
kable(round(d2,2))
```


:::

::: {.column width="60%"}

```{r}
d_var2 = d2 %>% summarise_all(var) %>% round(2)

as_tibble(cbind(variable = names(d_var2), t(d_var2))) %>%
  mutate(V2 = as.numeric(V2)) %>% 
  ggplot(aes(x = variable, y = V2))+
  geom_col()+
  geom_text(aes(label = V2), vjust = -0.5)+
  labs(y = "Variance")
```

:::

::::

- Transformed dataset where the variance is mostly contained in the first principal component (PC1)

# Dimension Reduction

- We can use PCA to reduce the dimension of the data when the first few PCs contain most of the total variances

- Thus, we can consider ignore PC2 to bring the data from two dimension (2 variables) to one dimension (PC1 only)


# In general

![](30.png)

- Reduce the dimension from $p$ to $M$

# Example 

#

- We will apply PCA on the `USArrests` dataset.

- This data set contains statistics, in arrests per 100,000 residents for assault, murder, and rape in each of the 50 US states in 1973. Also given is the percent of the population living in urban areas.

# 


```{r, echo=TRUE}
library(factoextra)
library(tidyverse)  
library(gridExtra)
data("USArrests")

df = USArrests
```



# 


```{r, echo=TRUE}
df
```


- Original Data

# 


```{r, echo=TRUE}
res.pca <- prcomp(df,  scale = TRUE)
```



# 


```{r, echo=TRUE}
res.pca$x
```


- Transformed dataset in Principal Components


# 


```{r, echo=TRUE}
fviz_eig(res.pca, addlabels = TRUE)
```


- Distribution of variance in the PCs. 


#


```{r, echo=TRUE}
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1)

```

- A principal is a (linear) combination of the original variables. Above is the contribution of the original variable in making the first principal component. 

#


```{r, echo=TRUE}
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 2)
```


- A principal is a (linear) combination of the original variables. Above is the contribution of the original variable in making the second principal component. 




