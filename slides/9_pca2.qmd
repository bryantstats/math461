---
title: "Principal Component Analysis"
format: beamer
editor: visual
---

# PCA in a view or coordinate rotation

```{r, eval=FALSE}
# Get some fake data here
library(tidyverse)
library(ggplot2)
library(factoextra)
library(tidyverse) # data manipulation and visualization
library(gridExtra)
n =  5
# x = sample(1:n, replace = TRUE, n) + rnorm(mean = 0, sd = .5, n)
# y = x + rnorm(mean=0, sd = 5, n)

x = c(1:5)
y = c(1,3,5,7,8)

var_x = var(x)
var_y = var(y)
var_total = var_x+var_y

d = as_tibble(data.frame(
     x1 = x, 
     x2 = y))
ggplot(data = d, aes(x = x, y=y))+
  geom_point()
```

# Variance of the Projection

```{r}
projected_variance <- function(X, v)
  # calculate the variance of the projected data vectors X on vector v
  # X a n x p matrix
  # v is p x 1 vector
{
  v = v/(sqrt(sum(v^2)))
  X = as.matrix(X)
  X = scale(X, scale = FALSE)
  p = X%*%v
  sum((p)^2)/(nrow(X)-1)    
}
```

```{r}
pca_plot = function(X, v)
{
  v1=v
  v = v/(sqrt(sum(v^2)))
  X = data.frame(X)
  X = as.matrix(X)
  # Projection matrix
  P = v%*%t(v)/(t(v)%*%v)[1]
  
  
  p1 = P%*%X[1,]
  
  # Projected points
  PX = t(P%*%t(X))
  PX = as_tibble(PX)
  
  dd = as_tibble(cbind(X, PX))
  
  pp = ggplot(data = dd)+
    geom_point(aes(x=x, y=y), size = 5)+
    geom_segment(aes(x = 0, y = 0, xend = 9*v[1], yend = 9*v[2]))+
    geom_point(aes(x=V1, y=V2),  color ='red', size = 5)+
    geom_segment(aes(x = x, y = y, xend = V1, yend = V2), linetype=2)+
    geom_text(x = 0, y=10, label = paste("V:", round(projected_variance(X,v),2)))+
    labs(title = paste("Variance:", round(projected_variance(X,v),2)),
         subtitle = paste0("Direction z: [", round(v1[1],2),",", round(v1[2],2),"]"))+
    xlim(0,9)+
    ylim(0,9)+
    coord_fixed()
print(pp)

}
```

```{r}

library(tidyverse)
library(ggplot2)
library(factoextra)
library(tidyverse) # data manipulation and visualization
library(gridExtra)
# Total variance is a constant
# Rotation does not change the total variance
vx= 0
vy = 1
v = c(vx,vy) 

set.seed(2023)

#x = sample(1:n, replace = TRUE, n)+rnorm(mean = 0, sd = .5, n)
#y = x + abs(rnorm(mean=0, sd = 5, n))

x = c(1:4)
y = c(1,2,5,7)

# x = c(1,1)
# y = c(3,3)
d <- as_tibble(data.frame(x = x, y=y))
library(knitr)
kable(d)

```

-   V(x) = `r round(var(x),2)`

-   V(y) = `r round(var(y),2)`

-   Total variance: V(x) + V(y) = `r round(var(x) + var(y),2)`

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(0,1))
```

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,0))
```

# 

```{r}
ggplot(data = d, aes(x = x, y=y))+
  geom_point()
```

# 

```{r}
projected_variance(d, v) + projected_variance(d, c(-vy, vx))
```

# 

```{r}
library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0))
```

# 

```{r}
library(tidyverse)
library(ggplot2)

pca_plot(d, c(1,0.1))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.2))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.3))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.4))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.5))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.6))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.7))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.8))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,0.9))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.1))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.2))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.3))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.4))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.5))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.6))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.7))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.8))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,1.9))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,2))
```

# 

```{r}


library(tidyverse)
library(ggplot2)


pca_plot(d, c(1,3))
```

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,4))
```

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,5))
```

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,6))
```

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(1,7))
```

# 

```{r}
library(tidyverse)
library(ggplot2)
pca_plot(d, c(0,1))
```

# 

```{r}
library(tidyverse)
library(ggplot2)

prin = prcomp(d)
pca_plot(d, prin$rotation[,1])

```

# 

```{r}
library(tidyverse)
library(ggplot2)

prin = prcomp(d)
pca_plot(d, prin$rotation[,2])

```

# Rotation Matrix or PC Loading

-   $\Phi$ =

```{r}
res.pca <- prcomp(d)
round(res.pca$rotation,2)
#get_eig(res.pca)
```

# PC Scores

-   $Z = X\cdot \Phi =$

```{r}
round(as.matrix(d)%*%res.pca$rotation,2)
```

# 

```{r}
fviz_eig(res.pca, addlabels = TRUE)
```

# 

-   What direction maximizes the variance?

# 

-   What direction maximizes the variance?

-   The first principal component

# 

![](32.png)

# 

![](33.png)

# Formula

-   Write down matrix form of the example

$X \to X\cdot\phi = Z$

-   $\phi$ is PC loading

-   $z$ is PC scores

# In general

![](30.png)

# Example

![](31.png)

# PC Loadings

![](34.png)

# How many PC should we use?

-   Performance during two sporting events

```{r}
library("factoextra")
library(kableExtra)

data(decathlon2)
decathlon2.active <- decathlon2[1:15, 1:7]
kable_styling(kable(head(as_tibble(decathlon2.active))), font_size = 7)


```

# Scree Plot

```{r}

res.pca <- prcomp(decathlon2.active, scale = TRUE)
fviz_eig(res.pca)
```

# 
